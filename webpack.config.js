var path = require('path')
var webpack = require('webpack')

var HtmlWebpackPlugin = require('html-webpack-plugin');
var ExtractTextPlugin = require("extract-text-webpack-plugin");
var CleanWebpackPlugin=require("clean-webpack-plugin");
var nodeEnv = process.env.NODE_ENV || 'development';
var CopyWebpackPlugin = require('copy-webpack-plugin');


var plugins= [
  new webpack.optimize.OccurenceOrderPlugin(),
  new webpack.HotModuleReplacementPlugin(),
  new webpack.ProvidePlugin({
    'fetch': 'imports?this=>global!exports?global.fetch!whatwg-fetch'
  }),
  new webpack.optimize.UglifyJsPlugin({ // Optimize the JavaScript...
      compress: {
        warnings: false // ...but do not show warnings in the console (there is a lot of them)
      }
  }),
  new HtmlWebpackPlugin({
    template: 'index.html', // Move the index.html file...
    minify: { // Minifying it while it is parsed
      removeComments: true,
      collapseWhitespace: true,
      removeRedundantAttributes: true,
      useShortDoctype: true,
      removeEmptyAttributes: true,
      removeStyleLinkTypeAttributes: true,
      keepClosingSlash: true,
      minifyJS: true,
      minifyCSS: true,
      minifyURLs: true
    },
    favicon: "favicon.ico",
    filename: "index.html",
    cache: true,
    inject: true // inject all files that are generated by webpack, e.g. bundle.js, main.css with the correct HTML tags
  }),
  new HtmlWebpackPlugin({
    template: "templates/404.html",
    filename: "404.html",
    cache: true,
    index: true
  }),

  new ExtractTextPlugin("css/style.css?[contenthash]"),
  new webpack.DefinePlugin({
    "process.env": {
      NODE_ENV: JSON.stringify(nodeEnv)
    }
  }),
  new CopyWebpackPlugin([{from: 'static'}])

];
if (nodeEnv=="production") {
  plugins.push(new CleanWebpackPlugin([ path.join(__dirname, 'public')]))
};

module.exports = {
  plugins: plugins,
  target: "web",
  devtool: 'cheap-module-eval-source-map',
  entry: [
    'webpack-hot-middleware/client',
    './index'
  ],
  output: {
    path: path.join(__dirname, 'public'),
    filename: 'js/bundle-[hash].js'
  },

  module: {
    loaders: [
      {
        test: /\.js$/,
        loaders: [ 'babel' ],
        exclude: /node_modules/,
        include: __dirname
      },
      {
        test: /\.html$/,
        loader: "html"
      },
      { test: /\.css$/, loader: ExtractTextPlugin.extract("style-loader", "css-loader!postcss-loader") },
      {
        test: /\.(jpe?g|png|gif|ico)$/i,
        loader:'url-loader?limit=10000&name=images/[name].[ext]?[hash]'
      },
      { test: /\.woff(2)?(\?v=[0-9]\.[0-9]\.[0-9])?$/,
        loader: "url-loader?limit=10000&name=images/[name].[ext]?[hash]&mimetype=application/font-woff" },
      { test: /\.(ttf|eot|svg)(\?v=[0-9]\.[0-9]\.[0-9])?$/,
        loader:'url-loader?limit=10000&name=images/[name].[ext]?[hash]'
      }
    ]
  }
}
